@use 'colors';
@use 'elevation';
@use 'state';

// Common Button Styles
.button {
  height: 40px;
  padding: 0 24px;
  border-radius: 20px;

  background-position: center;

  // Changes the press state layer opacity.
  .rippleVisible {
    opacity: state.$press-opacity;
  }
}

// Filled/Contained Variant Button Styles
.filled {
  // Enabled State Styles
  &:enabled {
    @include elevation.elevation-0;

    // Hover State Styles
    &:hover {
      @include elevation.elevation-1;
      background-color: color-mix(
        in hsl,
        colors.$primary,
        colors.$on-primary state.$hover-opacity
      );
    }

    // Focus State Styles
    &:focus-visible {
      @include elevation.elevation-0;
      background-color: color-mix(
        in hsl,
        colors.$primary,
        colors.$on-primary state.$focus-opacity
      );
    }

    // Press State Styles
    &:active {
      // Changes the state layer color to on primary.
      // MUI ripple inherits the button color for the ripple background color.
      color: colors.$on-primary;
    }
  }

  // Disabled State Styles
  &:disabled {
    background-color: rgba(colors.$on-surface, 12%);
    color: rgba(colors.$on-surface, 38%);
  }
}

// Filled/Contained Variant Button Styles
.error {
  // Enabled State Styles
  &:enabled {
    @include elevation.elevation-0;
    background-color: colors.$error;

    // Hover State Styles
    &:hover {
      @include elevation.elevation-1;
      background-color: color-mix(
        in hsl,
        colors.$error,
        colors.$on-error state.$hover-opacity
      );
    }

    // Focus State Styles
    &:focus-visible {
      @include elevation.elevation-0;
      background-color: color-mix(
        in hsl,
        colors.$error,
        colors.$on-error state.$focus-opacity
      );
    }

    // Press State Styles
    &:active {
      // Changes the state layer color to on primary.
      // MUI ripple inherits the button color for the ripple background color.
      color: colors.$on-error;
    }
  }

  // Disabled State Styles
  &:disabled {
    background-color: rgba(colors.$on-surface, 12%);
    color: rgba(colors.$on-surface, 38%);
  }
}


// Outlined Variant Button Styles
.outlined {
  border-color: colors.$outline;
  border-style: solid;
  border-width: 1px;

  // Enabled State Styles
  &:enabled {
    // Hover State Styles
    &:hover {
      background-color: rgba(colors.$primary, state.$hover-opacity);
      border-color: color-mix(
        in hsl,
        colors.$outline,
        colors.$primary state.$hover-opacity
      );
    }

    // Focus State Styles
    &:focus-visible {
      background-color: rgba(colors.$primary, state.$focus-opacity);
      border-color: color-mix(
        in hsl,
        colors.$outline,
        colors.$primary state.$focus-opacity
      );
    }

    // Press State Styles
    &:active {
      color: colors.$primary;
    }
  }

  // Disabled State Styles
  &:disabled {
    color: rgba(colors.$on-surface, 38%);
    border-color: rgba(colors.$on-surface, 12%);
  }
}

// Text Variant Button Styles
.text {
  padding: 0 12px;
  min-width: 46px;

  // Enabled State Styles
  &:enabled {
    // Hover State Styles
    &:hover {
      background-color: rgba(colors.$primary, state.$hover-opacity);
    }
    // Focus State Styles
    &:focus-visible {
      background-color: rgba(colors.$primary, state.$focus-opacity);
    }
    // Press State Styles
    &:active {
      color: colors.$primary;
    }
  }

  // Disabled State Styles
  &:disabled {
    color: rgba(colors.$on-surface, 38%);
  }
}