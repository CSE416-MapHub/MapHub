@use 'colors';
@use 'state';
@use 'shape';

// Icon Styles
.icon-button {
  & > i {
    color: colors.$on-surface-variant;
    transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  }

  .rippleVisible {
    color: colors.$on-surface-variant;
    opacity: state.$press-opacity;
  }

  &:enabled {
    &:hover {
      background-color: rgba(colors.$on-surface-variant, state.$hover-opacity);
    }
    &:focus-visible {
      background-color: rgba(colors.$on-surface-variant, state.$focus-opacity);
    }
  }
  &:disabled {
    & > i {
      color: colors.$on-surface;
      opacity: 38%;
    }
  }

  &--selected {
    & > i {
      color: colors.$primary;
    }
    .rippleVisible {
      color: colors.$on-primary;
    }
    &:enabled {
      &:hover {
        background-color: rgba(colors.$primary, state.$hover-opacity);
      }
      &:focus-visible {
        background-color: rgba(colors.$primary, state.$focus-opacity);
      }
    }
    &:disabled {
      & > i {
        color: colors.$on-surface;
        opacity: 38%;
      }
    }
  }
}

.icon-button--filled {
  @include shape.full;
  height: 40px;
  width: 40px;
  background-color: colors.$primary;

  .rippleVisible {
    color: colors.$on-primary;
    opacity: state.$press-opacity;
  }

  & > i {
    color: colors.$on-primary;
  }

  &:disabled {
    background-color: rgba(colors.$on-surface, 12%);

    & > i {
      color: rgba(colors.$on-surface, 38%);
    }
  }

  &:enabled {
    &:hover {
      background-color: color-mix(
        in hsl,
        colors.$primary,
        colors.$on-primary state.$hover-opacity
      );
    }
    &:focus-visible {
      background-color: color-mix(
        in hsl,
        colors.$primary,
        colors.$on-primary state.$focus-opacity
      );
    }
  }
}